// Generated by Dagger (https://google.github.io/dagger).
package com.app.thenhpattern.di.modules;

import com.app.thenhpattern.model.APIServices;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideAPIServicesFactory implements Factory<APIServices> {
  private final AppModule module;

  public AppModule_ProvideAPIServicesFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public APIServices get() {
    return provideInstance(module);
  }

  public static APIServices provideInstance(AppModule module) {
    return proxyProvideAPIServices(module);
  }

  public static AppModule_ProvideAPIServicesFactory create(AppModule module) {
    return new AppModule_ProvideAPIServicesFactory(module);
  }

  public static APIServices proxyProvideAPIServices(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAPIServices(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
